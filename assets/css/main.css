@tailwind base;
@tailwind components;
@tailwind utilities;

@import url("https://fonts.googleapis.com/css2?family=Amiri:ital,wght@0,400;0,700;1,400;1,700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

:lang(ar) {
  font-family: "Noto Sans Arabic", sans-serif;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100;
}

* {
  /* font-family: "Poppins"; */
  font-family: "Preahvihear", serif;
  font-optical-sizing: auto;
  font-style: normal;
  font-variation-settings: "wdth" 100;
}

.heading-localized:lang(en) {
  line-height: 1.1;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  justify-content: space-between;
  align-items: center;
}

.gradient-text {
  background: linear-gradient(to right, #ff7e5f, #feb47b);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.services-grid:hover > a > .service-item::after {
  opacity: 1;
}

.services-grid {
  font-size: 100px;
}

.service-item:hover::before,
.service-item:hover::after {
  opacity: 1;
}

.service-item {
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 24px;
  cursor: pointer;
  position: relative;
  display: flex;
  flex-direction: column;
  width: 236px;
  height: 312px;
  max-width: 236px;
  max-height: 312px;
}

.service-item::before,
.service-item::after {
  border-radius: inherit;
  content: "";
  position: absolute;
  opacity: 0;
  transition: opacity 500ms;
  height: 100%;
  width: 100%;
  top: 0px;
  left: 0px;
}

.service-item::before {
  background: radial-gradient(
    800px circle at var(--x) var(--y),
    rgba(255, 255, 255, 0.06),
    transparent 40%
  );
  z-index: 3;
}

.service-item::after {
  background: radial-gradient(
    400px circle at var(--x) var(--y),
    rgba(255, 255, 255, 0.3),
    transparent 40%
  );
  z-index: 1;
}

.service-item-content {
  background: rgb(23, 23, 23);
  border-radius: inherit;
  height: calc(100% - 2px);
  width: calc(100% - 2px);
  inset: 1px;
  z-index: 2;
  text-align: start;
  padding: 16px;
  padding-top: 48px;
  gap: 10px;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  position: absolute;
  margin: auto;
}

body.mobile-menu-scrolling {
  overflow-y: hidden;
}

/* Width */
::-webkit-scrollbar {
  width: 10px;
}
/* Track */
::-webkit-scrollbar-track {
  background: #f1f1f1;
}
/* Handle */
::-webkit-scrollbar-thumb {
  background: #888;
}
/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.cursor-circle {
  height: 24px;
  width: 24px;
  border-radius: 50%;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 99999999;
}

.cursor-inner-circle {
  height: 6px;
  width: 6px;
  background-color: #3b82f6;
}
.cursor-outer-circle {
  height: 56px;
  width: 56px;
  opacity: 0.7;
  background-color: none;
  border: 2px solid #3b82f6;
  transition: all 0.08s ease-out;
}

body {
  position: relative;
}

.blurry-light {
  position: absolute;
  top: -500px;
  left: 0%;
  width: 100vw;
  height: 1000px;
  z-index: -999999;
  background-image: radial-gradient(
    closest-side,
    rgba(53, 144, 223, 0.3),
    rgba(53, 144, 223, 0.1),
    #141414
  );
  border-radius: 100%;
}

@mixin backlight($x, $y, $spread, $size, $colorA, $colorB, $duration) {
  &:after {
    position: absolute;
    content: "";
    top: $y;
    left: $x;
    right: 0;
    z-index: -1;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    transform: scale($size);
    -webkit-filter: blur($spread);
    -moz-filter: blur($spread);
    -ms-filter: blur($spread);
    filter: blur($spread);
    background: linear-gradient(270deg, $colorA, $colorB);
    background-size: 200% 200%;
    animation: animateGlow $duration ease infinite;
    
    @keyframes animateGlow {
      0%{background-position:0% 50%}
      50%{background-position:100% 50%}
      100%{background-position:0% 50%}
    }
  }
}

#project-image-container::after {
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  right: 0;
  z-index: -9999;
  height: 100%;
  width: 100%;
  margin: 0 auto;
  transform: scale(0.75);
  -webkit-filter: blur(5vw);
  -moz-filter: blur(5vw);
  -ms-filter: blur(5vw);
  filter: blur(5vw);
  background: linear-gradient(270deg, #0c78d1, #0714c2);
  background-size: 200% 200%;
  animation: animateGlow 10s ease infinite;
  
  @keyframes animateGlow {
    0%{background-position:0% 50%}
    50%{background-position:100% 50%}
    100%{background-position:0% 50%}
  }
}

#project-image-container::before {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -99;
  background-image: linear-gradient(135deg, rgba(87, 130, 211, 0.1), rgba(255,255,255,0.1));
  backdrop-filter: blur(10px);  
  -webkit-backdrop-filter: blur(10px);
  border-radius: 20px;
}

/* Rotating blurry border button */

/* The secret sauce that enables gradient rotation. NOTE: does not work in all browsers. https://caniuse.com/?search=%40property */
@property --border-angle-1 {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0deg;
}

@property --border-angle-2 {
  syntax: "<angle>";
  inherits: true;
  initial-value: 90deg;
}

@property --border-angle-3 {
  syntax: "<angle>";
  inherits: true;
  initial-value: 180deg;
}

:root {
  --bright-blue: rgb(59 130 246);
  --bright-green: rgba(59, 131, 246, 0.23);
  --bright-red: rgba(59, 130, 246, 0.1);
  --background: black;
  --foreground: white;
  --border-size: 2px;
  --border-radius: 36px;
}

@keyframes rotateBackground {
  to {
    --border-angle-1: 360deg;
  }
}

@keyframes rotateBackground2 {
  to {
    --border-angle-2: -270deg;
  }
}

@keyframes rotateBackground3 {
  to {
    --border-angle-3: 540deg;
  }
}

.glowing-button {
  --border-angle-1: 0deg;
  --border-angle-2: 90deg;
  --border-angle-3: 180deg;
  color: inherit;
  border: 0;
  padding: var(--border-size);
  display: flex;
  width: max-content;
  border-radius: var(--border-radius);
  background-color: #ff7f5f3d;
  background-image: conic-gradient(
      from var(--border-angle-1) at -10% -10%,
      transparent,
      rgba(255, 126, 95, 0.3) 10%,
      transparent 30%,
      transparent
    ),
    conic-gradient(
      from var(--border-angle-2) at 60% 60%,
      transparent,
      rgba(255, 126, 95, 0.3) 10%,
      transparent 30%,
      transparent
    );
  animation: rotateBackground 5s linear infinite,
    rotateBackground2 3s linear infinite;
  position: relative;
}

/* Change this background to transparent to see how the gradient works */
.glowing-button div {
  border-radius: calc(var(--border-radius) - var(--border-size));
  color: var(--foreground);
  position: relative;
  background-color: rgba(0, 0, 0, 0.8);
}

.glowing-button > div::before,
.glowing-button > div::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  z-index: -1; /* Place behind the button content */
  animation: inherit; /* Use the same animation for the glow */
}

.glowing-button.glowing-button > div::before {
  filter: blur(20px);
  background-image: conic-gradient(
    from var(--border-angle-1) at 10% 15%,
    rgba(255, 126, 95, 0.2),
    transparent 20%
  );
}

.glowing-button.glowing-button > div::after {
  filter: blur(40px);
  background-image: conic-gradient(
    from var(--border-angle-2) at 70% 60%,
    rgba(255, 126, 95, 0.1),
    transparent 30%
  );
}
